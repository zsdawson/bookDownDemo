[["index.html", "step2 Chapter 1 note 1.1 about 1.2 R Markdown 1.3 data 1.4 ploting se", " step2 zsd 2023-03-24 Chapter 1 note This is a sample book written in Markdown. 1.1 about the idea of this is to provide good and useful examples for working with data analysis and data visualization. bookdown::serve_book() getting data in to r from excel #library(readxl) #data &lt;- read_excel(&quot;FILE_PATH/NAME&quot;) #put files in githib for storage how to import a csv library(readr) # iris &lt;- read_csv(&quot;/Users/zacharydawson/Desktop/newbook-r/iris.csv&quot;) head data or view the first few lines of data head(Loblolly) ## height age Seed ## 1 4.51 3 301 ## 15 10.89 5 301 ## 29 28.72 10 301 ## 43 41.74 15 301 ## 57 52.70 20 301 ## 71 60.92 25 301 # describe(Loblolly) # In RStudio displays information about the data set and its source in the # Help Window nrow(Loblolly) ## [1] 84 length(unique(Loblolly$Seed)) ## [1] 14 sort(unique(Loblolly$Seed)) ## [1] 329 327 325 307 331 311 315 321 319 301 323 309 303 305 ## 14 Levels: 329 &lt; 327 &lt; 325 &lt; 307 &lt; 331 &lt; 311 &lt; 315 &lt; 321 &lt; 319 &lt; ... &lt; 305 sumarise data summary(OrchardSprays) ## decrease rowpos colpos treatment ## Min. : 2.00 Min. :1.00 Min. :1.00 A : 8 ## 1st Qu.: 12.75 1st Qu.:2.75 1st Qu.:2.75 B : 8 ## Median : 41.00 Median :4.50 Median :4.50 C : 8 ## Mean : 45.42 Mean :4.50 Mean :4.50 D : 8 ## 3rd Qu.: 72.00 3rd Qu.:6.25 3rd Qu.:6.25 E : 8 ## Max. :130.00 Max. :8.00 Max. :8.00 F : 8 ## (Other):16 #group the length and the width is seperate data sets both with the variaty still there and then merge back tougher how to x &lt;- data() # x is now a list y &lt;- as.data.frame(x$results) y &lt;- y[,3:4] # This gives a data frame of name and description, 104 data sets library(tibble) library(tidyr) #data mtcars1 &lt;- mtcars head(mtcars1) ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 ## Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 #pivot_longer mt_long &lt;- pivot_longer(mtcars1, cols = mpg:carb, names_to = &quot;Category&quot;, values_to = &quot;Value&quot; ) head(mt_long) ## # A tibble: 6 × 2 ## Category Value ## &lt;chr&gt; &lt;dbl&gt; ## 1 mpg 21 ## 2 cyl 6 ## 3 disp 160 ## 4 hp 110 ## 5 drat 3.9 ## 6 wt 2.62 library(ggplot2) # data data &lt;- data.frame( name=c(&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;) , value=c(3,12,5,18,45) ) # Barplot ggplot(data, aes(x=name, y=value)) + geom_bar(stat = &quot;identity&quot;) library(ggplot2) ggplot(data= diamonds)+ geom_bar( mapping = aes(x = cut, fill = clarity), position = &quot;dodge&quot; ) library(ggplot2) ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))#Colour also works ggplot(data = mpg, mapping = aes(x = displ,y = hwy)) + geom_point(mapping = aes(color = class)) + geom_smooth() ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; 1.2 R Markdown library(ggplot2) library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union 1.3 data data(mpg) means &lt;- mpg %&gt;% group_by(class) %&gt;% summarise(mean = mean(hwy), se = sd(hwy)/sqrt(n())) means ## # A tibble: 7 × 3 ## class mean se ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2seater 24.8 0.583 ## 2 compact 28.3 0.552 ## 3 midsize 27.3 0.334 ## 4 minivan 22.4 0.622 ## 5 pickup 16.9 0.396 ## 6 subcompact 28.1 0.909 ## 7 suv 18.1 0.378 1.4 ploting se ggplot(means, aes(x = class, y = mean, fill = class)) + geom_col(position = &quot;dodge&quot;) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se), position = position_dodge(width = 0.9), width = 0.2) 1.4.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1 "],["grouped-vertical-bar-with-standard-error.html", "Chapter 2 grouped vertical bar with standard error", " Chapter 2 grouped vertical bar with standard error data(diamonds) means &lt;- diamonds %&gt;% group_by(cut, color) %&gt;% summarise(mean = mean(price), se = sd(price)/sqrt(n())) ## `summarise()` has grouped output by &#39;cut&#39;. You can override using the `.groups` ## argument. means ## # A tibble: 35 × 4 ## # Groups: cut [5] ## cut color mean se ## &lt;ord&gt; &lt;ord&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Fair D 4291. 257. ## 2 Fair E 3682. 199. ## 3 Fair F 3827. 182. ## 4 Fair G 4239. 204. ## 5 Fair H 5136. 223. ## 6 Fair I 4685. 282. ## 7 Fair J 4976. 371. ## 8 Good D 3405. 123. ## 9 Good E 3424. 109. ## 10 Good F 3496. 106. ## # … with 25 more rows ggplot(means, aes(x = cut, y = mean, fill = color)) + geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se), position = position_dodge(width = 0.9), width = 0.2) 2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1 data(ToothGrowth) means &lt;- ToothGrowth %&gt;% group_by(dose, supp) %&gt;% summarise(mean = mean(len), se = sd(len)/sqrt(n())) ## `summarise()` has grouped output by &#39;dose&#39;. You can override using the ## `.groups` argument. means ## # A tibble: 6 × 4 ## # Groups: dose [3] ## dose supp mean se ## &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 0.5 OJ 13.2 1.41 ## 2 0.5 VC 7.98 0.869 ## 3 1 OJ 22.7 1.24 ## 4 1 VC 16.8 0.795 ## 5 2 OJ 26.1 0.840 ## 6 2 VC 26.1 1.52 #Line and Point Graph with Standard Error by Treatment ggplot(means, aes(x = dose, y = mean, color = supp, group = supp)) + geom_line(size = 1) + geom_point(size = 3, shape = 21, fill = &quot;white&quot;) + geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2, size = 1) + labs(title = &quot;Tooth Growth by Treatment&quot;, x = &quot;Dose (mg/day)&quot;, y = &quot;Tooth Length&quot;) #dplyr to combine pseudoreplicates and then obtain n, mean and sem # Example data set.seed(123) data &lt;- data.frame( replicate = rep(1:3, each = 3), value = rnorm(9, mean = 10, sd = 2), pseudo = rep(1:3, 3) ) # Combine pseudoreplicates combined_data &lt;- data %&gt;% group_by(replicate) %&gt;% summarise(n = n(), mean = mean(value), sd = sd(value), sem = sd/sqrt(n)) %&gt;% ungroup() # View combined data combined_data ## # A tibble: 3 × 5 ## replicate n mean sd sem ## &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1 3 10.5 2.28 1.32 ## 2 2 3 11.3 1.87 1.08 ## 3 3 3 9.01 1.76 1.01 "]]
